#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

old_domain=$YNH_APP_OLD_DOMAIN
old_path=$YNH_APP_OLD_PATH

new_domain=$YNH_APP_NEW_DOMAIN
new_path=$YNH_APP_NEW_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# LOAD SETTINGS
#=================================================

db_name=$(ynh_app_setting_get "$app" db_name)
db_pwd=$(ynh_app_setting_get "$app" mysqlpwd)
db_user="$db_name"

#=================================================
# CHECK PATHS SYNTAX
#=================================================

test -n "$old_path" || old_path="/"
test -n "$new_path" || new_path="/"
new_path=$(ynh_normalize_url_path $new_path)
old_path=$(ynh_normalize_url_path $old_path)

#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

change_domain=0
if [ "$old_domain" != "$new_domain" ]
then
	change_domain=1
fi

change_path=0
if [ "$old_path" != "$new_path" ]
then
	change_path=1
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# MODIFY URL IN NGINX CONF FILE
#=================================================

nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

# Change the path in the nginx config file
if [ $change_path -eq 1 ]
then
  if [ "$new_path" = "/" ] && [ "$old_path" != "/" ] ; then
    # Replace path in several location occurrences based on different recognition patterns
    sed --in-place "s@location $old_path/ {\$@location / {@"  "$nginx_conf_path"
    ynh_replace_string "location ~ ^$old_path" "location ~ ^" "$nginx_conf_path"
    ynh_replace_string "location $old_path {" "location / {" "$nginx_conf_path"
    ynh_replace_string "rewrite ^ $old_path" "rewrite ^ " "$nginx_conf_path"
    
    # Move #for-subdir comment at the beginning of the line (line not needed for "/" path)
    sed --in-place "s/\(.*\) #for-subdir/#for-subdir \1/g" "$nginx_conf_path"
    elif [ "$new_path" != "/" ] && [ "$old_path" = "/" ] ; then
    # Move #for-subdir comment at the end of the line (line needed for "/path" path)
    sed --in-place "s/#for-subdir\(.*\)/\1 #for-subdir/g" "$nginx_conf_path"
    
    # Replace path in several location occurrences based on different recognition patterns
    sed --in-place "s@location / {\$@location $new_path/ {@"  "$nginx_conf_path"
    ynh_replace_string "location ~ ^" "location ~ ^$new_path" "$nginx_conf_path"
    ynh_replace_string "location / {" "location $new_path {" "$nginx_conf_path"
    ynh_replace_string "rewrite ^ /" "rewrite ^ $new_path/" "$nginx_conf_path"
  else
    # Replace locations starting with old_path
    # Look for every possible patterns for location (see https://nginx.org/en/docs/http/ngx_http_core_module.html#location)
    sed --in-place "s@location\( \(=\|~\|~\*\|\^~\)\)\? \(\^\)\?$old_path@location\1 \3$new_path@"  "$nginx_conf_path"
    # Replace path in "rewrite" directive
    ynh_replace_string "rewrite ^ $old_path" "rewrite ^ $new_path" "$nginx_conf_path"
  fi
fi

# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
	mv $nginx_conf_path /etc/nginx/conf.d/$new_domain.d/$app.conf
fi

#=================================================
# SPECIFIC MODIFICATIONS
#=================================================

# Configure Wallabag instance URL
ynh_mysql_connect_as "$db_name" "$db_pwd" "$db_user"  <<< "UPDATE craue_config_setting SET value = 'https://$new_domain$new_path' WHERE name = 'wallabag_url'"

# If "Download images locally" option has been enabled in Internal Settings
download_images_enabled=$(ynh_mysql_connect_as "$db_name" "$db_pwd" "$db_user"  <<<  "SELECT value from craue_config_setting WHERE name='download_images_enabled '" | tail -n 1)
if [ "$download_images_enabled" = "1" ] ; then
  echo "Updating images URL; this operation may take a while..."
  # Query/replace the domain/path in every entry.content in mysql database
  ynh_mysql_connect_as "$db_name" "$db_pwd" "$db_user"  <<< "UPDATE entry SET content = REPLACE(content, '$old_domain$old_path', '$new_domain$new_path');" 
fi

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
